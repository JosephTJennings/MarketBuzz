# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# Example  .gitlab-ci.yml file
stages:
  - maventry
  - androidtry

maven-build:   #this is a JOB
  stage: maventry
  tags:
    - springboot_tag  					# this is LINK to the shell runner on the remote-server 
  script:
    - cd Backend/marketbuzz					#change directory to where you have your springboot application
    - mvn package

android-build: #this is another job
  image:  gjandres/android-ci:latest      		# this is a directive to DOCKER
  stage: androidtry
  tags:
   - android_tag         					#this is LINK to the docker runner on the remote-server        
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - chmod +x ./Frontend/gradlew			#change directory to where you have ‘gradlew’ in your android directory
  script:
    - cd Frontend					#change directory to where you have your android application
    - ./gradlew assemble

